" -----------------------------------------------
" CUSTOMIZE BEHAVIOUR
" -----------------------------------------------

" Tabs to spaces.
set expandtab
set shiftwidth=4
set softtabstop=4
set smarttab
set smartindent
set tabstop=4

" Encoding options.
set encoding=utf-8 fileencoding=utf-8

" Search options.
set incsearch ignorecase smartcase hlsearch

" Mouse support
set mouse=a

" Manage multiple buffers effectively
set hidden


" Map leader to ,
let mapleader = ","

" Let see all the options when press <TAB> in command line
set wildmenu
set wildmode=list:longest

" Don't update the display while executing macros
set lazyredraw

" At lease show in which mode we are working
set showmode
set cursorline

" Enable omnicompletion and set some options
set ofu=syntaxcomplete#Complete
set completeopt=longest,menuone
" Change the behaviour of the <Enter> key in popmenu
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
" Add the C-Space mapping to enable omnicompletion
inoremap <expr> <C-Space> pumvisible() \|\| &omnifunc == '' ?
\ "\<lt>C-n>" :
\ "\<lt>C-x>\<lt>C-o><c-r>=pumvisible() ?" .
\ "\"\\<lt>c-n>\\<lt>c-p>\\<lt>c-n>\" :" .
\ "\" \\<lt>bs>\\<lt>C-n>\"\<CR>"
imap <C-@> <C-Space>

" Autoload changes in .vimrc
autocmd BufWritePost .vimrc source $MYVIMRC

" Move around the windows
noremap <silent> ,j :wincmd j<CR>
noremap <silent> ,h :wincmd h<CR>
noremap <silent> ,k :wincmd k<CR>
noremap <silent> ,l :wincmd l<CR>

noremap <silent> ,w <ESC>:w<CR>
noremap <silent> ,wa <ESC>:wa<CR>
noremap <silent> ,q <ESC>:q<CR>
noremap <silent> ,qa <ESC>:qa<CR>
noremap <silent> ,wq <ESC>:wq<CR>

" Move around tabs
noremap <silent> ,n :tabn<CR>
noremap <silent> ,p :tabp<CR>

" Move to the next buffer
noremap <leader>ñ :bnext<CR>
noremap <leader>l :bprevious<CR>
noremap <leader>bl :ls<CR>

"This clears the 'last search pattern' by hitting return
nnoremap <CR> :noh<CR><CR>

" ----------------------------------------------
"  CUSTOMIZE VIEW
" ----------------------------------------------

" Set theme.
sy on
set t_Co=256
set background=dark
colorscheme bubblegum


" Show number lines the title of the window and the ruler
set number
set title
set ruler

" Open new slip panes to right and bottom, which feels more natural
set splitbelow
set splitright

" ---------------------------------------------
"  FILETYPE specials
"  -------------------------------------------

" Activate pathogen (always before enable filetype plugin indent on!)
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

" Enable filetype support
filetype plugin indent on

" Vagrantfile is a ruby file!
au BufRead,BufNewFile Vagrantfile set ft=ruby

" Set puppet filetype when file finishes with *.pp
au BufRead,BufNewFile *.pp set ft=puppet

" =============================================
"  PLUGINS
" =============================================

" ----------
"  NERDTree
" ----------
nnoremap <silent><F2> :NERDTreeToggle<CR>
let NERDTreeAutoCenter = 1
let NERDTreeCaseSensitiveSort = 1
let NERDTreeHighlightCursorline = 1
let NERDTreeMouseMode = 2
let NERDTreeShowBookmarks = 1
let NERDTreeIgnore = ['\~$','\.pyc$','\py.class$']
let NERDTreeShowLineNumbers=0
let NERDTreeDirArrows=0
let NERDTreeAutoDeleteBuffer=1
let NERDTreeShowHidden = 1

" --------------
"  NERDTreeTabs
" --------------
let g:nerdtree_tabs_open_on_console_startup=1

" --------
"  Tagbar
" --------
nnoremap <silent><F3> :TagbarToggle<CR>
let g:tagbar_width = 30

" -------
"  Latex
" -------
set grepprg=grep\ -nH\ $*
let g:tex_flavor='latex'

" ---------
"  Airline
" ---------
" We should add this line to watch airline from the begging
set laststatus=2

" Add airline powerline-patched fonts. To do this, clone this
" repo: https://github.com/Lokaltog/powerline-fonts
" in your ~/.fonts directory, and execute
" $ fc-cache -f -v
let g:airline_powerline_fonts=1

" Cool symbols
let g:airline_left_sep = ''
let g:airline_right_sep = ''
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
  let g:airline_symbols.branch = ''

" Enable tagbar integration
let g:airline#extensions#tagbar#enabled = 1

" Enable fugitive integration
let g:airline#extensions#branch#enabled = 0
let g:airline#extensions#branch#empty_message = 'no branch'

" Smart tablines
let g:airline#extensions#tabline#enabled = 1

" Enable virtualenv integration
let g:airline#extensions#virtualenv#enabled = 1

" ----------
"  Fugitive
" ----------
autocmd BufReadPost fugitive://* set bufhidden=delete

" ---------
"  Jedi
" ---------
let g:jedi#use_tabs_not_buffers = 0
let g:jedi#usages_command = "<leader>u"

" ---------
"  CtrlP
" ---------
set wildignore+=*.pyc,*.swp
noremap <silent> ,b <ESC>:CtrlPBuffer<CR>
noremap <silent> ,f <ESC>:CtrlP<CR>

let g:ctrlp_working_path_mode = 'r'

" Use a leader instead of the actual named binding
nmap <leader>p :CtrlP<CR>

" Easy bindings for its various modes
nmap <leader>bb :CtrlPBuffer<CR>
nmap <leader>bm :CtrlPMixed<CR>
nmap <leader>bs :CtrlPMRU<CR>


" ---------
"  Vimflake
"  --------
autocmd BufWritePost *.py call Flake8()
